name: Ubuntu 22.04 (ROCm LLVM)
run-name: rocm-llvm

on:
  push:
    branches: [ main, colramos/self-hosted-runner ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
  pull_request:
    branches: [ main, colramos/self-hosted-runner ]
    paths-ignore:
      - '*.md'
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ubuntu-jammy-rocm-llvm-tests:
    runs-on: [mi100]
    strategy:
      fail-fast: false
      matrix:
        rocm-version: ['6.3']
        llvm-install: ['/opt/rocm/llvm']
        compiler: ['clang']
        build-type: ['Release']

    container:
      image: dgaliffiamd/rocprofiler-systems:ci-base-ubuntu-22.04
      options: >-
        --device=/dev/kfd
        --device=/dev/dri
        --group-add video 
    
    name: ubuntu-jammy-rocm-${{ matrix.rocm-version }}-${{ matrix.compiler }}-${{ matrix.build-type }}
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.CLONE_TOKEN }}
      
      - name: Install packages
        timeout-minutes: 25
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 25
          max_attempts: 5
          command: |
            apt-get update &&
            apt-get install -y software-properties-common &&
            apt-get upgrade -y &&
            apt-get install -y build-essential git wget ${{ matrix.compiler }} lld libzstd-dev libomp-dev ccache kmod libdwarf-dev &&
            python3 -m pip install --upgrade pip &&
            python3 -m pip install 'cmake==3.22'
        
      - name: Install ROCm Packages
        timeout-minutes: 25
        if: ${{ matrix.rocm-version != '0.0' }}
        uses: nick-fields/retry@v3
        with:
          retry_wait_seconds: 30
          timeout_minutes: 25
          max_attempts: 5
          shell: bash
          command: |
            ROCM_VERSION=${{ matrix.rocm-version }}
            ROCM_MAJOR=$(echo ${ROCM_VERSION} | sed 's/\./ /g' | awk '{print $1}')
            ROCM_MINOR=$(echo ${ROCM_VERSION} | sed 's/\./ /g' | awk '{print $2}')
            ROCM_VERSN=$(( (${ROCM_MAJOR}*10000)+(${ROCM_MINOR}*100) ))
            echo "ROCM_MAJOR=${ROCM_MAJOR} ROCM_MINOR=${ROCM_MINOR} ROCM_VERSN=${ROCM_VERSN}"
            wget -q https://repo.radeon.com/amdgpu-install/${{ matrix.rocm-version }}/ubuntu/jammy/amdgpu-install_${ROCM_MAJOR}.${ROCM_MINOR}.${ROCM_VERSN}-1_all.deb
            apt-get install -y ./amdgpu-install_${ROCM_MAJOR}.${ROCM_MINOR}.${ROCM_VERSN}-1_all.deb
            apt-get update -y
            apt-get install -y {rocm-dev,rocm-llvm-dev,rocm-hip-runtime-dev,rocm-smi-lib,rocminfo}${ROCM_VERSION} 
            echo "/opt/rocm/bin" >> $GITHUB_PATH 
            echo "ROCM_PATH=/opt/rocm" >> $GITHUB_ENV 
            echo "LD_LIBRARY_PATH=/opt/rocm/lib:${LD_LIBRARY_PATH}" >> $GITHUB_ENV

      - name: Verify visible devices
        continue-on-error: true
        run: |
          rocminfo

      - name: Build and install
        timeout-minutes: 25
        shell: bash
        run: |
          git config --global --add safe.directory ${PWD} &&
          cmake --version &&
          mkdir -p build &&
          cmake -DCMAKE_PREFIX_PATH=${ROCM_PATH} -DLLVM_INSTALL_DIR=${{ matrix.llvm-install }} -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DCMAKE_VERBOSE_MAKEFILE=ON -S . -B build &&
          cmake --build build --target install

